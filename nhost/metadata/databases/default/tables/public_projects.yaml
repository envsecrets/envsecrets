table:
  name: projects
  schema: public
object_relationships:
  - name: organisation
    using:
      foreign_key_constraint_on: org_id
  - name: user
    using:
      foreign_key_constraint_on: user_id
array_relationships:
  - name: environments
    using:
      foreign_key_constraint_on:
        column: project_id
        table:
          name: environments
          schema: public
  - name: project_level_permissions
    using:
      foreign_key_constraint_on:
        column: project_id
        table:
          name: project_level_permissions
          schema: public
insert_permissions:
  - role: user
    permission:
      check:
        organisation:
          _or:
            - user_id:
                _eq: X-Hasura-User-Id
            - org_has_user:
                _and:
                  - user_id:
                      _eq: X-Hasura-User-Id
                  - role:
                      permissions:
                        _contains:
                          projects:
                            create: true
      set:
        user_id: x-hasura-User-Id
      columns:
        - name
        - org_id
      validate_input:
        definition:
          forward_client_headers: true
          headers: []
          timeout: 10
          url: '{{API}}/v1/projects/validate-input'
        type: http
select_permissions:
  - role: user
    permission:
      columns:
        - name
        - created_at
        - updated_at
        - id
        - org_id
        - user_id
      filter:
        _or:
          - organisation:
              user_id:
                _eq: X-Hasura-User-Id
          - organisation:
              org_has_user:
                _and:
                  - user_id:
                      _eq: X-Hasura-User-Id
                  - role:
                      permissions:
                        _contains:
                          projects:
                            read: true
          - user_id:
              _eq: X-Hasura-User-Id
      allow_aggregations: true
update_permissions:
  - role: user
    permission:
      columns:
        - name
      filter:
        organisation:
          _or:
            - user_id:
                _eq: X-Hasura-User-Id
            - org_has_user:
                _and:
                  - user_id:
                      _eq: X-Hasura-User-Id
                  - role:
                      permissions:
                        _contains:
                          projects:
                            update: true
      check: null
delete_permissions:
  - role: user
    permission:
      filter:
        organisation:
          _or:
            - user_id:
                _eq: X-Hasura-User-Id
            - org_has_user:
                _and:
                  - user_id:
                      _eq: X-Hasura-User-Id
                  - role:
                      permissions:
                        _contains:
                          projects:
                            delete: true
event_triggers:
  - name: project_create_envs
    definition:
      enable_manual: false
      insert:
        columns: '*'
    retry_conf:
      interval_sec: 10
      num_retries: 0
      timeout_sec: 60
    webhook: '{{API}}/v1/triggers/projects/new'
    headers:
      - name: x-hasura-webhook-secret
        value_from_env: NHOST_WEBHOOK_SECRET
    cleanup_config:
      batch_size: 10000
      clean_invocation_logs: false
      clear_older_than: 168
      paused: true
      schedule: 0 0 * * *
      timeout: 60
